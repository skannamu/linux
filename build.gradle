plugins {
    id 'fabric-loom' version "${loom_version}"
    id 'maven-publish'
}

// DuplicatesStrategy를 사용하기 위해 import 합니다.
import org.gradle.api.file.DuplicatesStrategy
import org.gradle.jvm.tasks.Jar // Jar 타입을 사용하기 위해 추가

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    mavenCentral()
    maven { url 'https://maven.fabricmc.net/' }
}

// ----------------------------------------------------
// ✅ 이 블록은 정확하게 작성되었습니다.
sourceSets {
    main {
        // Java 소스 파일 위치
        java {
            srcDirs 'src/main/java'
        }
        // 리소스 파일 위치 (쉐이더 JSON, GLSL 등이 포함된 assets 폴더)
        resources {
            srcDirs 'src/main/resources'
        }
    }
}
// ----------------------------------------------------

loom {

    mods {
        "${project.archives_base_name}" {
            sourceSet sourceSets.main
        }
    }
    mixin {
        defaultRefmapName = "mixins.${project.archives_base_name}.refmap.json"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "com.google.code.gson:gson:2.10.1"

}

processResources {
    // 🛑 processResources에 대한 중복 처리 전략 (이전 오류 해결)
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": inputs.properties.version
    }

}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

java {
    withSourcesJar()
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

// ----------------------------------------------------
// ✅ sourcesJar 태스크에 대한 중복 처리 전략 추가 (현재 오류 해결)
tasks.named('sourcesJar', Jar) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
// ----------------------------------------------------

jar {
    inputs.property "archivesName", project.base.archivesName

    from("LICENSE") {
        rename { "${it}_${inputs.properties.archivesName}"}
    }
}


publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    repositories {
        // Add repositories to publish to here.
    }
}
