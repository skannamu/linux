package com.skannamu.client;

import net.minecraft.client.MinecraftClient;
import net.minecraft.client.network.ClientPlayerEntity;
import net.minecraft.client.sound.SoundManager;
import net.minecraft.client.sound.PositionedSoundInstance;
import net.minecraft.sound.SoundEvents;
import net.minecraft.client.world.ClientWorld; // üí° ClientWorld ÏûÑÌè¨Ìä∏
import java.util.UUID;

public class ClientExploitManager {

    private static boolean isExploitActive = false;
    private static long startTick = 0;
    private static int durationTicks = 0;

    public static void startSequence(UUID targetId, int duration) {
        MinecraftClient client = MinecraftClient.getInstance();
        ClientPlayerEntity player = client.player;
        ClientWorld world = client.world; // üí° ÏõîÎìú Í∞ùÏ≤¥Î•º Îî∞Î°ú Ï∞∏Ï°∞

        if (player != null && world != null) {
            isExploitActive = true;
            startTick = world.getTime(); // ÏïàÏ†ÑÌïòÍ≤å ÏõîÎìú ÏãúÍ∞Ñ ÏÇ¨Ïö©
            durationTicks = duration;

            SoundManager soundManager = client.getSoundManager();
            soundManager.play(PositionedSoundInstance.master(
                    SoundEvents.BLOCK_REDSTONE_TORCH_BURNOUT,
                    1.0F,
                    1.0F
            ));

            if (client.currentScreen != null && client.currentScreen.getTitle().getString().contains("Terminal")) {
                client.setScreen(null);
            }
        }
    }

    public static void clientTick(MinecraftClient client) {
        if (!isExploitActive) return;

        ClientWorld world = client.world;
        if (world == null) {
            endSequence();
            return;
        }

        long currentTick = world.getTime();
        long elapsedTicks = currentTick - startTick;

        if (elapsedTicks >= durationTicks) {
            endSequence();
        }
    }

    public static void endSequence() {
        isExploitActive = false;
        startTick = 0;
        durationTicks = 0; //
    }

    public static float getSequenceProgress() {
        if (!isExploitActive) return 0.0f;

        ClientWorld world = MinecraftClient.getInstance().world;
        if (world == null) return 0.0f; // ‚ö†Ô∏è NPE Î∞©ÏßÄ

        long elapsedTicks = world.getTime() - startTick;
        return Math.min(1.0f, (float)elapsedTicks / durationTicks);
    }

    public static boolean isExploitActive() {
        return isExploitActive;
    }
}