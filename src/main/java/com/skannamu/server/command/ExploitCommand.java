package com.skannamu.server.command;

import com.skannamu.init.ModItems; // 💡 ModItems 임포트
import com.skannamu.network.ExploitSequencePayload;
import com.skannamu.server.ExploitScheduler;
import com.skannamu.skannamuMod;
import net.fabricmc.fabric.api.networking.v1.ServerPlayNetworking;
import net.minecraft.entity.damage.DamageType;
import net.minecraft.entity.player.PlayerInventory;
import net.minecraft.item.ItemStack;
import net.minecraft.registry.RegistryKey;
import net.minecraft.registry.RegistryKeys;
import net.minecraft.server.network.ServerPlayerEntity;
import net.minecraft.util.Identifier;
import java.util.List;

public class ExploitCommand implements ICommand {

    public static final RegistryKey<DamageType> EXPLOIT_DAMAGE_TYPE = RegistryKey.of(
            RegistryKeys.DAMAGE_TYPE,
            Identifier.of(skannamuMod.MOD_ID, "exploit_damage")
    );

    public static void registerDamageType() {
        skannamuMod.LOGGER.info("DamageType registration delegated to JSON Data Pack. Key: {}", EXPLOIT_DAMAGE_TYPE.getValue());
    }

    private boolean hasNanoBladeModule(ServerPlayerEntity player) {
        PlayerInventory inventory = player.getInventory();
        for (ItemStack stack : inventory.getMainStacks()) {
            if (!stack.isEmpty() && stack.getItem() == ModItems.NANO_BLADE) {
                return true;
            }
        }
        return false;
    }

    @Override
    public String getName() {
        return "exploit";
    }

    @Override
    public String getUsage() {
        return "Usage: exploit -a backattack -p <target>\n" +
                "  -a backattack: 타겟팅 후 뒤로 순간이동하여 즉사 공격을 실행합니다. (Nano Blade 모듈 필요)\n" +
                "  -p <target>: 대상 플레이어 닉네임.";
    }

    @Override
    public String execute(ServerPlayerEntity player, List<String> options, String argument) {

        if (!hasNanoBladeModule(player)) {
            return "Error: Nano Blade module access denied. Module not detected in inventory.";
        }

        if (!options.contains("a") || !options.contains("p")) {
            return "Error: Missing required option(s). Use -h for help.";
        }
        String[] argParts = argument.trim().split("\\s+", 2);
        String action = argParts[0].trim();
        String targetName = argParts.length > 1 ? argParts[1].trim() : "";

        if (!action.equalsIgnoreCase("backattack")) {
            return "Error: Unknown action '" + action + "'. Only 'backattack' is supported by this module.";
        }
        if (targetName.isEmpty()) {
            return "Error: Target player name not specified. Use -h for help.";
        }
        ServerPlayerEntity targetPlayer = player.getServer().getPlayerManager().getPlayer(targetName);
        if (targetPlayer == null || targetPlayer.isDead()) {
            return "Error: Target player '" + targetName + "' not found or is dead.";
        }
        final int SEQUENCE_DURATION = 100;

        ExploitScheduler.storeOriginalPosition(player, SEQUENCE_DURATION);
        ExploitScheduler.storePendingAttack(player.getUuid(), targetPlayer.getUuid());

        ExploitSequencePayload payload = new ExploitSequencePayload(targetPlayer.getUuid(), SEQUENCE_DURATION);
        ServerPlayNetworking.send(player, payload);

        return "Exploit Backattack sequence initiated. Eliminating target: " + targetPlayer.getGameProfile().getName() + ". Standby...";
    }
}